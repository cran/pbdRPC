% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rpc_cs_example.r
\name{rpc_cs_example}
\alias{rpc_cs_example}
\alias{check_cs}
\alias{kill_cs}
\alias{start_cs}
\title{Example Functions of RPC Related to pbdCS}
\usage{
check_cs(machine, cmd = .pbd_env$RPC.CS$check)

kill_cs(machine, cmd = .pbd_env$RPC.CS$kill)

start_cs(machine, cmd = .pbd_env$RPC.CS$start,
  preload = .pbd_env$RPC.CS$preload)
}
\arguments{
\item{machine}{A machine configuration. See \code{?machine}.}

\item{cmd}{the main command to be executed on the server.}

\item{preload}{further commands preloaded before the main \code{command} is executed.}
}
\value{
Mainly the message received at the command line will be printed, but
may not be captured by R.
}
\description{
Example functions of RPC related to pbdCS
}
\details{
Using either \code{ssh} or \code{plink} to launch a pbdCS R cluster.

NO further input from \code{stdin} is expected.
Outputs or errors may not be captured by R.

\code{start_cs()} starts a pbdCS R cluster on remote servers.
Typical commands to launch a pbdCS R cluster is given in the example.
The linux/unix commands are as the following:
\itemize{
\item{1)}{\code{nohup} is for the non-stop call after disconnection.}
\item{2)}{\code{mpiexec -np 4} is for launching 4 MPI instances.}
\item{3)}{\code{Rscript -e 'pbdCS::pbdserver()'} is for R to start the
          pbdCS R cluster within MPI in batch.}
\item{4)}{\code{> .rrlog} is to direct the \code{stdout} to a file
          \code{.rrlog}}
\item{5)}{\code{2>&1} is to turn \code{stderr} to \code{stdout} which
          is the file \code{.cslog}.}
\item{6)}{\code{< /dev/null} is to get \code{stdin} from
          \code{/dev/null} which is nothing happen.}
\item{7)}{\code{&} is to put the batch command for the pbdCS R cluster
          in background.}
}

\code{check_cs()} checks if there is a pbdCS R cluster on a remote
server. Lunix/unix commands \code{ps} and \code{grep} are used.

\code{kill_cs()} kills the pbdCS R cluster if found.
Lunix/unix commands \code{ps}, \code{grep}, \code{awk}, and \code{kill}
are used.
}
\examples{
\dontrun{
library(pbdRPC, quietly = TRUE)
# rpcopt_set(user = "snoweye", hostname = "192.168.56.101")
m <- machine(user = "snoweye", hostname = "192.168.56.101")

check_cs(m)    # pid 2857 (may differ)
kill_cs(m)     # all pbdCS pids are killed
check_cs(m)    # make sure no pbdCS R cluster is running

### use "; " to bypass multiple commands
preload <- "source ~/work-my/00_set_devel_R; "

### start a new pbdCS R cluster
start_cs(m, preload = preload)
check_cs(m)
kill_cs(m)

### Example: for module load on supercomputers
preload <- "module load r; "    # e.g. via module load r
start_cs(m, preload = preload)
check_cs(m)
kill_cs(m)
}


}
